// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc253.driveTest.subsystems;

import org.usfirst.frc253.driveTest.RobotMap;
import org.usfirst.frc253.driveTest.commands.*;

import com.kauailabs.navx.frc.AHRS;

import edu.wpi.first.wpilibj.DigitalInput;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;

/**
 *
 */
public class Pneumatics extends Subsystem {

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
	Compressor compressor = RobotMap.pneumaticsCompressor1;
	DoubleSolenoid solenoid1 = RobotMap.pneumaticsDoubleSolenoid1;
	DoubleSolenoid solenoid2 = RobotMap.pneumaticsDoubleSolenoid2;
	DoubleSolenoid solenoid3 = RobotMap.pneumaticsDoubleSolenoid3;
	
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public Pneumatics(){
    	CompressStop();
    }
    
    public void CompressStart(){
    	compressor.setClosedLoopControl(true);
    }
    public void CompressStop(){
    	compressor.setClosedLoopControl(false);
    }
    public void Solenoid1Forward(){
//    	relay.setDirection(Relay.Value.kForward);
//    	relay.set(Relay.Value.kOn);
    	solenoid1.set(DoubleSolenoid.Value.kForward);
    }
    public void Solenoid1Reverse(){
//    	doubleSolenoid.set(DoubleSolenoid.Value.kReverse);
    	solenoid1.set(DoubleSolenoid.Value.kReverse);
    }
    public void Solenoid1Off(){
//    	relay.set(Relay.Value.kOff);
    	solenoid1.set(DoubleSolenoid.Value.kOff);
    }
    public void Solenoid2Forward(){
//    	relay.setDirection(Relay.Value.kForward);
//    	relay.set(Relay.Value.kOn);
    	solenoid2.set(DoubleSolenoid.Value.kForward);
    }
    public void Solenoid2Reverse(){
//    	doubleSolenoid.set(DoubleSolenoid.Value.kReverse);
    	solenoid2.set(DoubleSolenoid.Value.kReverse);
    }
    public void Solenoid2Off(){
//    	relay.set(Relay.Value.kOff);
    	solenoid2.set(DoubleSolenoid.Value.kOff);
    }
    public void Solenoid3Forward(){
    	solenoid3.set(DoubleSolenoid.Value.kForward);
    }
    public void Solenoid3Reverse(){
    	solenoid3.set(DoubleSolenoid.Value.kReverse);
    }
    public void Solenoid3Off(){
    	solenoid3.set(DoubleSolenoid.Value.kOff);
    }
}

