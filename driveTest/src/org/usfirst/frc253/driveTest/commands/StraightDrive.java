// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc253.driveTest.commands;
import org.usfirst.frc253.driveTest.Robot;
import org.usfirst.frc253.driveTest.*;

import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.command.PIDCommand;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class StraightDrive extends PIDCommand {

    public StraightDrive(double p, double i, double d) {
		super(p, i, d);
		
		// TODO Auto-generated constructor stub
	}

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    boolean toggle = true;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if(toggle){
    		getPIDController().setSetpoint(Robot.sensors.getYaw());
    		toggle = false;
    	}
    	//double speed = Robot.oi.getRightJoystick().getY();
    	double speed= -0.25;
    	Robot.driveTrain.drive(speed - getPIDController().get(), speed);
    	SmartDashboard.putNumber("PID Setpoint", getPIDController().getSetpoint());
    	SmartDashboard.putNumber("PID get Output", getPIDController().get());
    	
    	double leftPos = Robot.driveTrain.getTalonLeft().getSelectedSensorPosition(0);
    	double rightPos = Robot.driveTrain.getTalonRight().getSelectedSensorPosition(0);
    	
    	/*if(Robot.oi.controller.getTriggerAxis(GenericHID.Hand.kRight)!= 0){
    		Robot.driveTrain.getTalonLeft().setSelectedSensorPosition(0, 0, 0);
    		Robot.driveTrain.getTalonRight().setSelectedSensorPosition(0, 0, 0);
    	}*/
    	SmartDashboard.putNumber("Left Position", -leftPos);
    	SmartDashboard.putNumber("Right Position", rightPos);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	toggle = true;
    }

	@Override
	protected double returnPIDInput() {
		// TODO Auto-generated method stub
		return Robot.sensors.getYaw();
	}

	@Override
	protected void usePIDOutput(double output) {
		SmartDashboard.putNumber("usePIDOutput", output);
	}
}
